% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcGmmPen.R
\name{tcGmmPen}
\alias{tcGmmPen}
\title{Fit Two-Condition Gaussian Mixture Model with Penalization}
\usage{
tcGmmPen(
  y,
  g,
  zInit,
  maxIter = 100,
  thresh = 1e-16,
  lambda = 1,
  verboseN = TRUE,
  type.prop = NULL
)
}
\arguments{
\item{y}{A matrix with rows as samples (cells) and columns as features (genes)}

\item{g}{A vector indicating condition 1 (0) and condition 2 (1)}

\item{zInit}{A matrix indicating the assignment of groups with rows as samples and columns as groups}

\item{maxIter}{A numeric value of maximum iteration number. Default is 100.}

\item{thresh}{A numeric value of the converge criteria. Define as the Frobenius norm of the difference of current mean and mean in last iteration. Default is 1e-8.}

\item{verboseN}{A logical value. Whether to print the iteration number.}

\item{type.prop}{A numeric vector specifying fixed type proportions. Default is \code{NULL}.}
}
\value{
A list with the components:
\describe{
  \item{\code{mu}}{The mean parameter}
  \item{\code{sigma}}{The standard deviation parameter}
  \item{\code{delta}}{The shift of mean parameter}
  \item{\code{z}}{The assignment of groups}
  \item{\code{model}}{The fitted regression model of each group}
}
}
\description{
This function fits the Two-Condition Gaussian Mixture Model (TCGMM) with penalty.
We assume that the latent groups are consistent between two conditions only with shifts in mean parameters.

This function fits the Two-Condition Gaussian Mixture Model (TCGMM).
We assume that the latent groups are consistent between two conditions only with shifts in mean parameters.
}
\examples{
library(extraDistr)
mu1 <- c(5, 7, 9)
theta1 <- c(1, 2, 0)
sigma1 <- c(1, 2, 3)
mu2 <- c(10, 15, 4)
theta2 <- c(1, 2, 6)
sigma2 <- c(0.4, 0.2, 0.4)
mu.mat <- cbind(mu1, mu2)
delta.mat <- cbind(theta1, theta2)
sigma.mat <- cbind(sigma1, sigma2)
dat <- simGen(n = 100, n.feature = 2, n.group = 3, type.prop = c(0.2, 0.3, 0.5),
mu.mat = mu.mat, sigma.mat = sigma.mat, delta.mat = delta.mat)
p_int <- c(0.4, 0.3, 0.3)
z_int <- rmnom(n = 100, size = 1, prob = p_int)
fit <- tcGmmPen(dat$y, dat$g, zInit = z_int)

}
\author{
Dongyuan Song
}
